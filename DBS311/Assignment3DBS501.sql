
CREATE OR REPLACE TRIGGER varpaychk
AFTER INSERT OR UPDATE ON EMPLOYEE
FOR EACH ROW
DECLARE
  v_op CHAR(1);
BEGIN
  v_op := CASE WHEN INSERTING THEN 'I' ELSE 'U' END;

  -- Bonus rule
  IF (:NEW.BONUS IS NOT NULL AND :NEW.SALARY IS NOT NULL AND :NEW.BONUS > (0.2 * :NEW.SALARY)) THEN
    INSERT INTO EMPAUDIT (EMPID, ERRORCODE, OPERATION, WORKDEPT, SALARY, COMM, BONUS)
    VALUES (:NEW.EMPNO, 'B', v_op, 'N/A', :NEW.SALARY, :NEW.COMM, :NEW.BONUS);
  END IF;

  -- Commission rule
  IF (:NEW.COMM IS NOT NULL AND :NEW.SALARY IS NOT NULL AND :NEW.COMM > (0.25 * :NEW.SALARY)) THEN
    INSERT INTO EMPAUDIT (EMPID, ERRORCODE, OPERATION, WORKDEPT, SALARY, COMM, BONUS)
    VALUES (:NEW.EMPNO, 'C', v_op, 'N/A', :NEW.SALARY, :NEW.COMM, :NEW.BONUS);
  END IF;

  -- Sum rule
  IF (:NEW.BONUS IS NOT NULL AND :NEW.COMM IS NOT NULL AND :NEW.SALARY IS NOT NULL
      AND (:NEW.BONUS + :NEW.COMM) > (0.4 * :NEW.SALARY)) THEN
    INSERT INTO EMPAUDIT (EMPID, ERRORCODE, OPERATION, WORKDEPT, SALARY, COMM, BONUS)
    VALUES (:NEW.EMPNO, 'S', v_op, 'N/A', :NEW.SALARY, :NEW.COMM, :NEW.BONUS);
  END IF;
END;
/


CREATE OR REPLACE TRIGGER nomgr
FOR INSERT OR UPDATE OR DELETE ON EMPLOYEE
COMPOUND TRIGGER

    TYPE dept_list_t IS TABLE OF EMPLOYEE.WORKDEPT%TYPE INDEX BY PLS_INTEGER;
    v_deleted_mgr_depts dept_list_t;
    v_count PLS_INTEGER := 0;
    v_op CHAR(1);

AFTER EACH ROW IS
    v_mgr_count NUMBER;
BEGIN
    -- INSERT or UPDATE logic
    IF INSERTING OR UPDATING THEN
        v_op := CASE WHEN INSERTING THEN 'I' ELSE 'U' END;

        SELECT COUNT(*) INTO v_mgr_count
        FROM EMPLOYEE
        WHERE WORKDEPT = :NEW.WORKDEPT AND JOB = 'MANAGER';

        IF v_mgr_count = 0 AND :NEW.WORKDEPT != '000' THEN
            -- Reassign employee to HR department
            UPDATE EMPLOYEE
            SET WORKDEPT = '000'
            WHERE EMPNO = :NEW.EMPNO;

            -- Log to EMPAUDIT
            INSERT INTO EMPAUDIT (
                EMPID, ERRORCODE, OPERATION, WORKDEPT,
                SALARY, COMM, BONUS
            )
            VALUES (
                :NEW.EMPNO, 'M', v_op, :NEW.WORKDEPT,
                :NEW.SALARY, :NEW.COMM, :NEW.BONUS
            );
        END IF;

    ELSIF DELETING THEN
        IF :OLD.JOB = 'MANAGER' THEN
            v_count := v_count + 1;
            v_deleted_mgr_depts(v_count) := :OLD.WORKDEPT;
        END IF;
    END IF;
END AFTER EACH ROW;

AFTER STATEMENT IS
BEGIN
    FOR i IN 1 .. v_deleted_mgr_depts.COUNT LOOP
        FOR emp IN (
            SELECT EMPNO, SALARY, COMM, BONUS
            FROM EMPLOYEE
            WHERE WORKDEPT = v_deleted_mgr_depts(i)
        ) LOOP
            UPDATE EMPLOYEE
            SET WORKDEPT = '000'
            WHERE EMPNO = emp.EMPNO;

            INSERT INTO EMPAUDIT (
                EMPID, ERRORCODE, OPERATION, WORKDEPT,
                SALARY, COMM, BONUS
            )
            VALUES (
                emp.EMPNO, 'M', 'D', v_deleted_mgr_depts(i),
                emp.SALARY, emp.COMM, emp.BONUS
            );
        END LOOP;
    END LOOP;
END AFTER STATEMENT;

END nomgr;
/


CREATE OR REPLACE TRIGGER empvac
AFTER INSERT OR UPDATE OR DELETE ON EMPLOYEE
FOR EACH ROW
DECLARE
  v_years NUMBER;
  v_days  NUMBER;
BEGIN
  IF INSERTING OR UPDATING THEN
    v_years := TRUNC(MONTHS_BETWEEN(SYSDATE, :NEW.HIREDATE) / 12);
    IF v_years < 10 THEN v_days := 15;
    ELSIF v_years BETWEEN 10 AND 19 THEN v_days := 20;
    ELSIF v_years BETWEEN 20 AND 29 THEN v_days := 25;
    ELSE v_days := 30;
    END IF;

    DELETE FROM VACATION WHERE EMPID = :NEW.EMPNO;
    INSERT INTO VACATION VALUES (:NEW.EMPNO, :NEW.HIREDATE, v_days);
  END IF;

  IF DELETING THEN
    DELETE FROM VACATION WHERE EMPID = :OLD.EMPNO;
  END IF;
END;
/

-- Testing 

INSERT INTO EMPLOYEE (EMPNO, FIRSTNAME, MIDINIT, LASTNAME, WORKDEPT, PHONENO, HIREDATE, JOB, EDLEVEL, SEX, BIRTHDATE, SALARY, BONUS, COMM)
VALUES ('000001', 'HR', 'M', 'MANAGER', '000', '1234', TO_DATE('1990-01-01', 'YYYY-MM-DD'), 'MANAGER', 18, 'M', TO_DATE('1970-01-01', 'YYYY-MM-DD'), 70000, 0, 0);

-- Test varpaychk trigger: High bonus/comm
INSERT INTO EMPLOYEE (EMPNO, FIRSTNAME, MIDINIT, LASTNAME, WORKDEPT, PHONENO, HIREDATE, JOB, EDLEVEL, SEX, BIRTHDATE, SALARY, BONUS, COMM)
VALUES ('000002', 'Test', 'A', 'Bonus', 'A00', '5678', TO_DATE('2000-01-01', 'YYYY-MM-DD'), 'CLERK', 14, 'F', TO_DATE('1980-05-01', 'YYYY-MM-DD'), 50000, 12000, 15000);


INSERT INTO EMPLOYEE (EMPNO, FIRSTNAME, MIDINIT, LASTNAME, WORKDEPT, PHONENO, HIREDATE, JOB, EDLEVEL, SEX, BIRTHDATE, SALARY, BONUS, COMM)
VALUES ('000003', 'No', 'B', 'Manager', 'X99', '4321', TO_DATE('2015-05-05', 'YYYY-MM-DD'), 'CLERK', 12, 'M', TO_DATE('1995-07-07', 'YYYY-MM-DD'), 40000, 0, 0);


INSERT INTO EMPLOYEE (EMPNO, FIRSTNAME, MIDINIT, LASTNAME, WORKDEPT, PHONENO, HIREDATE, JOB, EDLEVEL, SEX, BIRTHDATE, SALARY, BONUS, COMM)
VALUES ('000004', 'Vacation', 'C', 'Test', 'B11', '6789', TO_DATE('2012-07-15', 'YYYY-MM-DD'), 'ANALYST', 16, 'F', TO_DATE('1982-03-03', 'YYYY-MM-DD'), 60000, 0, 0);

SELECT * FROM EMPAUDIT;
SELECT * FROM VACATION;
SELECT * FROM EMPLOYEE;
